---
title: "Predicting Weight from Fitness Patterns"
author: "Isobel Bodefeld, Michael Tao, Wei-jet Chiew"
format: html
---

## Introduction

We found our data on Kaggle from the author Vala Khorasani. According to Khorasani, this dataset was generated using simulated data based on "realistic gym exercise patterns." With 973 observations, this data is related to key performance indicators such as heart rate and calories burned along with information relating to demographics and experience levels.

Outcome to predict: Weight (in kilograms)

Predictors of Interest:

-   Age (in years)

-   Gender (Male or Female)

-   Height (in meters)

-   Avg_BPM (beats per minute during workout sessions)

-   Session_Duration (duration of each workout session in hours)

-   Calories_Burned (total calories burned during each session)

-   Workout_Type (Cardio, Strength, Yoga, HIIT)

    -   Cardio: 255 observations

    -   Strength: 258 observations

    -   Yoga: 239 observations

    -   HIIT: 221 observations

-   Fat_Percentage (body fat percentage)

-   Water_Intake (daily water intake in liters)

-   Workout_Frequency (number of workout sessions per week as days/week)

-   Experience_Level (beginner 1 to expert 3)

-   BMI (Body Mass Index, calculated from height and weight)

## Research Questions

Can Body Weight(kg) be determined by Workout Frequency, Workout Type, Height, Calories Burned per Workout, Fat Percentage, and Avg BPM?

Can the Calories Burned per Workout be predicted by the Session Duration of the Workout?

Can Body Fat Percentage be predicted by Experience Level, Workout Frequency, Water Intake, and Avg BPM during the workout?

## Data Exploration

```{r}
data <- read.csv("gym_members_exercise_tracking.csv")
head(data)
```

```{r}
workout_type_counts <- table(data$Workout_Type)
workout_type_counts
```

```{r}
# Visualizing Research Question 1
library(GGally)

rq_1 <- subset(data, select = c(Weight, Workout_Frequency, Workout_Type, Calories_Burned, Height, Avg_BPM, Fat_Percentage))
ggpairs(rq_1, lower = list(combo = "box_no_facet"))

boxplot(data$Weight ~ data$Workout_Frequency)
boxplot(data$Weight ~ data$Workout_Type)
plot(data$Calories_Burned, data$Weight)
plot(data$Height, data$Weight)
plot(data$Avg_BPM, data$Weight)
plot(data$Fat_Percentage, data$Weight)

```

From the visualizations, it seems that Height is the most highly correlated with Body Weight with a slightly positive relationship. Taller individuals tend to have larger skeletal frames and more body mass in general, which naturally contributes to a higher weight.

```{r}
# Visualizing Research Question 2
rq_2 <- subset(data, select = c(Calories_Burned, Session_Duration))
ggpairs(rq_2, lower = list(combo = "box_no_facet"))
```

```{r}
# Visualizing Research Question 3
rq_3 <- subset(data, select = c(Fat_Percentage, Experience_Level, Workout_Frequency, Water_Intake, Avg_BPM))
ggpairs(rq_3, lower = list(combo = "box_no_facet"))
```

## Multiple Linear Regression Model
```{r}
model <- lm(Weight ~ Workout_Frequency + Workout_Type + Calories_Burned + Height + Avg_BPM + Fat_Percentage, data = data)
summary(model)
```
Interpreting Slopes

1. Workout_Frequency(Numeric): Holding all other predictors constant, increasing workout frequency by 1 time a week will lead to a decrease in body weight by 2.978 kg.
2. Workout_Type(Categorical): Holding all other predictors constant, doing a HIIT workout will lead to a decrease in body weight by 0.582 kg compared to doing a Cardio workout.
Holding all other predictors constant, doing a Strength workout will lead to a decrease in body weight by 2.133 kg compared to doing a Cardio workout.
Holding all other predictors constant, doing a Yoga workout will lead to a decrease in body weight by 2.094 kg compared to doing a Cardio workout.
3. Calories_Burned(Numeric): Holding all other predictors constant, increasing calories burned by 1 calorie will lead to a incrase in body weight by 0.00105 kg.
4. Height(Numeric): Holding all other predictors constant, increasing height by 1 unit will lead to an increase in body weight by 52.092 kg.
5. Avg_BPM(Numeric): Holding all other predictors constant, increasing Avg_BPM by 1 bpm will lead to an increase in body weight by 0.0102 kg.
6. Fat_Percentage(Numeric: Holding all other predictors constant, increasing fat percentage by 1 unit will lead to a decrease in body weight by 0.7206 kg.

F-test for Model Significance
H0: The null hypothesis is that all of the regression coefficients are 0.
HA: The alternative hypothesis is that at least one of the regression coefficients doesn't equal 0.

Based on our F-statistic of 24.21 on 8 and 964 degrees of freedom and our p-value being less than 0.05, we can assume that we have a large F-statistic and therefore the reject the null hypothesis.

Multiple R^2
Our multiple R^2 of 0.1673 means that 16.73% of all variability in our data can be attributed to our predictors.

Residual Standard Error
Our residual standard error of 19.43 means that on average, our predictions are 19.43kg off from the actual body weight values.





## Improving the Model
```{r}
library(ggfortify)

autoplot(model)
```
Checking Assumptions
Linearity: Based on our residuals plot, our residuals seem to be even across 0 indicating the linearity assumption holds.
Constant Variance: Based on our scale-location plot, the constant variance seems to hold since there doesn't seem to be a systematic deviation from the line.
Normality: Based on our QQ plot, the normality assumption is violated because the data points do not lie on the dashed line.

```{r}
hist(log(data$Weight), xlab = "Log Body Weight")
```
```{r}
log_model <- lm(log(Weight) ~  Workout_Frequency + Workout_Type + Calories_Burned + Height + Avg_BPM + Fat_Percentage, data = data)

autoplot(log_model)

```
After using a log transformation of the dependent variable, we improved the normality assumption and slightly hurt the constant variance assumption.

Splining
```{r}
library(splines)
spline_model <- lm(Weight ~  Workout_Frequency + Workout_Type + Calories_Burned + Height + bs(Avg_BPM, 3) + Fat_Percentage, data = data)
plot(data$Avg_BPM, data$Weight)
lines(data$Avg_BPM, predict(spline_model), col = 4, lwd = 3)

autoplot(spline_model)
summary(spline_model)
```
Based on our results when splining, we determined that it did not improve our model because our multiple R^2, F-statistic, and residual standard error remained the same.

## Formal Hypothesis Tests

(Your text here)

## Robustness of Results

(Your text here)

## Conclusions

(Your text here)
